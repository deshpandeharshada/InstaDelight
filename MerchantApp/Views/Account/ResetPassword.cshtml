@model MerchantApp.Models.ResetPasswordViewModel
@{
    ViewBag.Title = @Global.Merchant.Resetpassword;
}

<link rel="stylesheet" href="~/Content/fonts/opensans/css/fonts.css">
<link rel="stylesheet" href="~/Content/css/foundation.css">

<link rel="stylesheet" href="~/Content/css/font-awesome.min.css">

<div class="h-heading text-center">
    @ViewBag.Title
</div>

@*<script type="text/javascript">
    function FillLanguage() {
        $('#LanguageId').html("");
        var CountryId = $('#CountryId').val();
        if (CountryId != "") {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getLanguage")',
                dataType: 'json',
                data: { id: CountryId },
                success: function (countries) {
                    $.each(countries, function (i, state) {
                        $("#LanguageId").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve country languages.' + ex);
                }
            });
        }
        return false;

    }
</script>*@

@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    <div class="row">
        <p style="color:#CC3333;">@Global.Merchant.Resetyourpassword</p>

        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new { @class = "text-danger", @style = "color:red" })
        @Html.HiddenFor(model => model.Code)

        @*<label>
            @Global.Merchant.SelectCountry
            @Html.DropDownListFor(m => m.CountryId, (List<SelectListItem>)ViewBag.CountryList, @Global.Merchant.SelectCountry,
                new { @style = "border-radius:4px;", @onchange = "FillLanguage()" })
        </label>

        <label>
            @Global.Merchant.SelectLanguage
            @Html.DropDownListFor(m => m.LanguageId, new SelectList(Enumerable.Empty<SelectListItem>(), "Text", "Value"), @Global.Merchant.SelectLanguage,
         new { @style = "border-radius:4px;" })
            @Html.HiddenFor(m => m.LanguageId)
        </label>*@

        <label>
            @Global.Merchant.UserName

            @Html.TextBoxFor(m => m.UserName, new { @Value = ViewBag.UserName, @class = "textbox", @readonly = "readonly", @placeholder = @Global.Merchant.UserName })
        </label>

        <label>
            @Global.Merchant.Password
            @Html.PasswordFor(m => m.Password, new { @class = "textbox", @placeholder = @Global.Merchant.Password })
        </label>

        <label>
            @Global.Merchant.Confirmpassword
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "textbox", @placeholder = @Global.Merchant.Confirmpassword })
        </label>

        <input type="submit" class="button" value="@Global.Merchant.Reset" style="width:100%; border-radius:5px;" />

    </div>



}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script type="text/javascript">
        $(function () {

            var CountryId = $('#CountryId').val();
            if (CountryId != "") {
                FillLanguage();
            }
        }
        );
    </script>*@
}
